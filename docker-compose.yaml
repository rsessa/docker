# Use postgres/example user/password credentials
version: '3.8'

volumes:
  database-data:

networks:
  stack:
    name: stack
    external: false

services:
  database:
    container_name: database
    image: postgres
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/
    env_file: .env
    networks:
      - stack

  calcom:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
        NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
        CALCOM_TELEMETRY_DISABLE: ${CALCOM_TELEMETRY_DISABLED}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        CALENDSO_ENCRYPTION_KEY: ${CALENDSO_ENCRYPTION_KEY}
        DATABASE_URL: ${DATABASE_URL}
      network: stack
    restart: always
    networks:
      - web
      - interna
    labels:
      # Traefik
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:${BLACKSTONE_HOST}"
      traefik.port: '3000'
      # Caddy
      caddy: ${BLACKSTONE_HOST}
      caddy.reverse_proxy: "{{upstreams 3000}}"
    expose:
      - 80
      - 443
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
    depends_on:
      - database

# Optional use of Prisma Studio. In production, comment out or remove the section below to prevent unwanted access to your database.
  studio:
    image: calendso/calendso:latest
    restart: always
    networks:
      - web
      - interna
    labels:
      # Traefik
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:${BLACKSTONE_HOST}"
      traefik.port: '5555'
      # Caddy
      caddy: ${BLACKSTONE_HOST}
      caddy.reverse_proxy: "{{upstreams 5555}}"
    expose:
      - 80
      - 443
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
    depends_on:
      - database
    command:
      - npx
      - prisma
      - studio
# END SECTION: Optional use of Prisma Studio.
